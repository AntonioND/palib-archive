<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>PAlib: General Functions</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>General Functions</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00007.htm">PA_FifoMsg</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Represents a message sent through Fifo.  <a href="a00007.htm#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00009.htm">PA_TransferRegion</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">PAlib transfer region type.  <a href="a00009.htm#_details">More...</a><br/></td></tr>
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gad2b2525df8643ab68ad90fad218a866a"></a><!-- doxytag: member="General::FIFO_PALIB" ref="gad2b2525df8643ab68ad90fad218a866a" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#gad2b2525df8643ab68ad90fad218a866a">FIFO_PALIB</a>&nbsp;&nbsp;&nbsp;FIFO_SOUND</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">PAlib Fifo channel number... <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga6d7cbbde898d6fdcdb1627ea5fe13153"></a><!-- doxytag: member="General::PA_SendFifoMsg" ref="ga6d7cbbde898d6fdcdb1627ea5fe13153" args="(msg)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga6d7cbbde898d6fdcdb1627ea5fe13153">PA_SendFifoMsg</a>(msg)&nbsp;&nbsp;&nbsp;fifoSendDatamsg(FIFO_PALIB, sizeof(<a class="el" href="a00007.htm">PA_FifoMsg</a>), (u8*) &amp;msg)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Send a <a class="el" href="a00007.htm" title="Represents a message sent through Fifo.">PA_FifoMsg</a> structure to the other CPU. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga7b583effc34bde71125cb1a641bce760"></a><!-- doxytag: member="General::PA_SendFifoVal" ref="ga7b583effc34bde71125cb1a641bce760" args="(val)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga7b583effc34bde71125cb1a641bce760">PA_SendFifoVal</a>(val)&nbsp;&nbsp;&nbsp;fifoSendValue32(FIFO_PALIB, val)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Send a 32bit value to the other CPU. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaea4d9300a8124916272612c55f1e225a"></a><!-- doxytag: member="General::PA_SendFifoCmd" ref="gaea4d9300a8124916272612c55f1e225a" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#gaea4d9300a8124916272612c55f1e225a">PA_SendFifoCmd</a>&nbsp;&nbsp;&nbsp;PA_SendFifoVal</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Send a command value to the other CPU (same as PA_SendFifoVal but for readability). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga9bf77a790fd3ba85c6589a2cc6a2ffbd"></a><!-- doxytag: member="General::PA_GetFifoMsg" ref="ga9bf77a790fd3ba85c6589a2cc6a2ffbd" args="(msg, bytes)" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga9bf77a790fd3ba85c6589a2cc6a2ffbd">PA_GetFifoMsg</a>(msg, bytes)&nbsp;&nbsp;&nbsp;fifoGetDatamsg(FIFO_PALIB, bytes, (u8*) &amp;msg)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Receive a <a class="el" href="a00007.htm" title="Represents a message sent through Fifo.">PA_FifoMsg</a> structure from the other CPU. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga4f46d10c4cb6b9d2dba6b20ede7a6c73"></a><!-- doxytag: member="General::PA_FifoRetWait" ref="ga4f46d10c4cb6b9d2dba6b20ede7a6c73" args="()" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga4f46d10c4cb6b9d2dba6b20ede7a6c73">PA_FifoRetWait</a>()&nbsp;&nbsp;&nbsp;while(!fifoCheckValue32(FIFO_PALIB))</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Wait for the other CPU to send a return value. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaac5e8bd276e9e068dec7a70c0311679c"></a><!-- doxytag: member="General::PA_FifoRetVal" ref="gaac5e8bd276e9e068dec7a70c0311679c" args="()" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#gaac5e8bd276e9e068dec7a70c0311679c">PA_FifoRetVal</a>()&nbsp;&nbsp;&nbsp;fifoGetValue32(FIFO_PALIB)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the other CPU's return value. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga8b9d7cac722895bc7feac6d1cb7da8c8"></a><!-- doxytag: member="General::PA_Transfer" ref="ga8b9d7cac722895bc7feac6d1cb7da8c8" args="" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga8b9d7cac722895bc7feac6d1cb7da8c8">PA_Transfer</a>&nbsp;&nbsp;&nbsp;((volatile <a class="el" href="a00009.htm">PA_TransferRegion</a>*) 0x02FFF100)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">PAlib transfer region (used for the storage of data coming from the ARM7). libnds also does this. As TransferRegion was removed we just skip the first 256 bytes. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga5a5959107726cf9becfe3af94af0499d">PA_LegacyIPCInit</a>()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">[DEPRECATED] Initialize the legacy IPC system.  <a href="#ga5a5959107726cf9becfe3af94af0499d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaab4f4e9a4443621b3b354099759357fb"></a><!-- doxytag: member="General::PA_LidClosed" ref="gaab4f4e9a4443621b3b354099759357fb" args="()" -->
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#gaab4f4e9a4443621b3b354099759357fb">PA_LidClosed</a>()&nbsp;&nbsp;&nbsp;_PA_LidDown</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Check if the DS is closed. Returns 0 if open, 1 if closed. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga08ab8334774076d5b7d9806a8cafc258">PA_CloseLidSound</a>(close_sound)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Check if the DS is closed. If closed, it pauses the DS, and plays a sound.  <a href="#ga08ab8334774076d5b7d9806a8cafc258"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#gac727a5e3af86e986e9942bf31a3e0858">PA_CloseLidSound2</a>(close_sound, open_sound)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Check if the DS is closed. If closed, it pauses the DS, and plays a sound. The sound system must be initialized before.  <a href="#gac727a5e3af86e986e9942bf31a3e0858"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga376671148907b5c00a589c83b0d64a92">PA_WaitFor</a>(something)&nbsp;&nbsp;&nbsp;do{while(!(something)) PA_WaitForVBL();}while(0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Wait for a specific thing to happen...  <a href="#ga376671148907b5c00a589c83b0d64a92"></a><br/></td></tr>
<tr><td colspan="2"><h2>Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom">{ <a class="el" href="a00070.htm#gga61dadd085c1777f559549e05962b2c9ea085fcf4f4a5af364b26845da8d08b37b">PA_MSG_INPUT</a> =  0x7000, 
<a class="el" href="a00070.htm#gga61dadd085c1777f559549e05962b2c9ea0b91530acc0797d12baee5a2e63d8b8c">PA_MSG_MIC</a> =  0x7100, 
<a class="el" href="a00070.htm#gga61dadd085c1777f559549e05962b2c9eabc30e4b3a25f3ead2db4e257768e3f51">PA_MSG_DSLBRIGHT</a> =  0x7102, 
<a class="el" href="a00070.htm#gga61dadd085c1777f559549e05962b2c9ea32ee9d7551b6d1fa4499f3f90693292c">PA_MSG_PSG</a> =  0x7103
 }</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><p><a class="el" href="a00007.htm" title="Represents a message sent through Fifo.">PA_FifoMsg</a> message types. </p>
 <a href="a00070.htm#ga61dadd085c1777f559549e05962b2c9e">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom">{ <a class="el" href="a00070.htm#gga726ca809ffd3d67ab4b8476646f26635adc510df01111a791e6d42894e43c3e7b">PA_MSG_MICSTOP</a> =  0x7101
 }</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><p><a class="el" href="a00070.htm#gaea4d9300a8124916272612c55f1e225a" title="Send a command value to the other CPU (same as PA_SendFifoVal but for readability)...">PA_SendFifoCmd()</a> commands. </p>
 <a href="a00070.htm#ga726ca809ffd3d67ab4b8476646f26635">More...</a><br/></td></tr>
<tr><td colspan="2"><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga8cf682ccbb2823118eb8762eab84539b"></a><!-- doxytag: member="General::PA_FifoGetRetVal" ref="ga8cf682ccbb2823118eb8762eab84539b" args="()" -->
static u32&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga8cf682ccbb2823118eb8762eab84539b">PA_FifoGetRetVal</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Inline function to ease the getting of the return value (wait + get). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga9d1e006a5b057290a85f7e71cba4f0c1"></a><!-- doxytag: member="General::PA_Init" ref="ga9d1e006a5b057290a85f7e71cba4f0c1" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga9d1e006a5b057290a85f7e71cba4f0c1">PA_Init</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initialise the library. Should be used at the beginning of main(). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaa4df419911e1c0a97f6c6d060dfd5e25"></a><!-- doxytag: member="General::PA_InitFifo" ref="gaa4df419911e1c0a97f6c6d060dfd5e25" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#gaa4df419911e1c0a97f6c6d060dfd5e25">PA_InitFifo</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initialize the Fifo system. It is automatically done in <a class="el" href="a00070.htm#ga9d1e006a5b057290a85f7e71cba4f0c1" title="Initialise the library. Should be used at the beginning of main().">PA_Init()</a>. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga0ebdd9e51453e185afa795e590547d05"></a><!-- doxytag: member="General::PA_Init2D" ref="ga0ebdd9e51453e185afa795e590547d05" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga0ebdd9e51453e185afa795e590547d05">PA_Init2D</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets to 2D state after using 3D functions. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga2f2e605901a879f4643e2355a28bf34d">PA_SetVideoMode</a> (u8 screen, u8 mode)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Change the video mode... Use this with caution.  <a href="#ga2f2e605901a879f4643e2355a28bf34d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gab6780062f1ff2d6bd0c6bc67b6616147"></a><!-- doxytag: member="General::PA_UpdateUserInfo" ref="gab6780062f1ff2d6bd0c6bc67b6616147" args="(void)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#gab6780062f1ff2d6bd0c6bc67b6616147">PA_UpdateUserInfo</a> (void)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Updates the user info. This is automatically done in PA_Init. You can then get any info with the following variables : PA_UserInfo.Color (favorite color), .BdayDay, .BdayMonth, .AlarmHour, .AlarmMinute, .Name, .NameLength, .Message, .MessageLength, .Language. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga45cdf5ca56c5fb7e47d7543cf8999f28"></a><!-- doxytag: member="General::PA_UpdateRTC" ref="ga45cdf5ca56c5fb7e47d7543cf8999f28" args="(void)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga45cdf5ca56c5fb7e47d7543cf8999f28">PA_UpdateRTC</a> (void)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Updates the Real Time Clock, with info on the current date and hour. Automatically updated in the <a class="el" href="a00060.htm" title="PAlib C++ namespace.">PA</a> VBL... Get the info with PA_RTC.Minutes, .Hour, .Seconds, .Day, .Month, and .Year. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga4d70816fba2becf67b2821655322bdec"></a><!-- doxytag: member="General::PA_SwitchScreens" ref="ga4d70816fba2becf67b2821655322bdec" args="()" -->
static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga4d70816fba2becf67b2821655322bdec">PA_SwitchScreens</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Switch the bottom and top screens... <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga3eaabdd22f9766dcd814822822170d7c">PA_SetAutoCheckLid</a> (u8 on)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Automatically check if the DS is closed in PA_WaitForVBL.  <a href="#ga3eaabdd22f9766dcd814822822170d7c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga371d4d3ff8a8ec77f0870474708686a4">PA_SetLedBlink</a> (u8 blink, u8 speed)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set teh DS Led blinking.  <a href="#ga371d4d3ff8a8ec77f0870474708686a4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga4c19a2d198aec266bb15f473f9b0484c"></a><!-- doxytag: member="General::PA_CheckLid" ref="ga4c19a2d198aec266bb15f473f9b0484c" args="()" -->
u8&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga4c19a2d198aec266bb15f473f9b0484c">PA_CheckLid</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Check if the DS is closed. If closed, it pauses the DS, and returns 1. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga3acf5d26f19bffb5a115d5751467ff04"></a><!-- doxytag: member="General::PA_WaitForVBL" ref="ga3acf5d26f19bffb5a115d5751467ff04" args="()" -->
static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga3acf5d26f19bffb5a115d5751467ff04">PA_WaitForVBL</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Wait for the VBlank to occur. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga811d7afe6fb63586b28f69e227254261">PA_SetScreenLight</a> (u8 screen, u8 light)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set on or off the screen's light.  <a href="#ga811d7afe6fb63586b28f69e227254261"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga28e76a5dd9550a183950db58e6db55b8">PA_SetDSLBrightness</a> (u8 level)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the DS Lite Light level...  <a href="#ga28e76a5dd9550a183950db58e6db55b8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#ga187b1799eb5cb7e364363179e4b87763">PA_Locate</a> (char *start, char *target, bool isDir, int depth, char *result)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Find a directory in the file system within a given depth.  <a href="#ga187b1799eb5cb7e364363179e4b87763"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gad0d97863c2c7ada35037fc9ec12e06cc"></a><!-- doxytag: member="General::PA_Error" ref="gad0d97863c2c7ada35037fc9ec12e06cc" args="(const char *text)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00070.htm#gad0d97863c2c7ada35037fc9ec12e06cc">PA_Error</a> (const char *text)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Displays an error message. <br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Initialise the lib, and other general functions... </p>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga5a5959107726cf9becfe3af94af0499d"></a><!-- doxytag: member="PA_General.h::PA_LegacyIPCInit" ref="ga5a5959107726cf9becfe3af94af0499d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_LegacyIPCInit</td>
          <td>(</td>
&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span>{ \
    memset((<span class="keywordtype">void</span>*) &amp;PA_IPC, 0, <span class="keyword">sizeof</span>(PA_IPCType)); \
    <a class="code" href="a00070.htm#ga8b9d7cac722895bc7feac6d1cb7da8c8" title="PAlib transfer region (used for the storage of data coming from the ARM7). libnds...">PA_Transfer</a>-&gt;mailData = (u32)(&amp;PA_IPC); \
}<span class="keywordflow">while</span>(0)
</pre></div>
<p>[DEPRECATED] Initialize the legacy IPC system. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000013">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="ga08ab8334774076d5b7d9806a8cafc258"></a><!-- doxytag: member="PA_General.h::PA_CloseLidSound" ref="ga08ab8334774076d5b7d9806a8cafc258" args="(close_sound)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_CloseLidSound</td>
          <td>(</td>
          <td class="paramtype">close_sound&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span>{\
    <span class="keywordflow">if</span>(<a class="code" href="a00070.htm#gaab4f4e9a4443621b3b354099759357fb" title="Check if the DS is closed. Returns 0 if open, 1 if closed.">PA_LidClosed</a>()){\
        PA_PlaySimpleSound(close_sound);\
        <a class="code" href="a00070.htm#ga4c19a2d198aec266bb15f473f9b0484c" title="Check if the DS is closed. If closed, it pauses the DS, and returns 1.">PA_CheckLid</a>(); \
    }}<span class="keywordflow">while</span>(0)
</pre></div>
<p>Check if the DS is closed. If closed, it pauses the DS, and plays a sound. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>close_sound</em>&nbsp;</td><td>Sound to play, check the sounds doc if you're not sure what to do here </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gac727a5e3af86e986e9942bf31a3e0858"></a><!-- doxytag: member="PA_General.h::PA_CloseLidSound2" ref="gac727a5e3af86e986e9942bf31a3e0858" args="(close_sound, open_sound)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_CloseLidSound2</td>
          <td>(</td>
          <td class="paramtype">close_sound, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">open_sound&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span>{\
    <span class="keywordflow">if</span>(<a class="code" href="a00070.htm#gaab4f4e9a4443621b3b354099759357fb" title="Check if the DS is closed. Returns 0 if open, 1 if closed.">PA_LidClosed</a>()){\
        PA_PlaySimpleSound(close_sound);\
        <a class="code" href="a00070.htm#ga4c19a2d198aec266bb15f473f9b0484c" title="Check if the DS is closed. If closed, it pauses the DS, and returns 1.">PA_CheckLid</a>(); \
        PA_PlaySimpleSound(open_sound); \
    }}<span class="keywordflow">while</span>(0)
</pre></div>
<p>Check if the DS is closed. If closed, it pauses the DS, and plays a sound. The sound system must be initialized before. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>close_sound</em>&nbsp;</td><td>Sound to play when closes, check the sounds doc if you're not sure what to do here </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>open_sound</em>&nbsp;</td><td>Sound to play when opens, check the sounds doc if you're not sure what to do here </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga376671148907b5c00a589c83b0d64a92"></a><!-- doxytag: member="PA_General.h::PA_WaitFor" ref="ga376671148907b5c00a589c83b0d64a92" args="(something)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_WaitFor</td>
          <td>(</td>
          <td class="paramtype">something&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;do{while(!(something)) PA_WaitForVBL();}while(0)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Wait for a specific thing to happen... </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>something</em>&nbsp;</td><td>Thing to wait for, like Pad.Newpress.A, or Stylus.Newpress, etc... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ga61dadd085c1777f559549e05962b2c9e"></a><!-- doxytag: member="PA_FifoMessages.h::@5" ref="ga61dadd085c1777f559549e05962b2c9e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><a class="el" href="a00007.htm" title="Represents a message sent through Fifo.">PA_FifoMsg</a> message types. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga61dadd085c1777f559549e05962b2c9ea085fcf4f4a5af364b26845da8d08b37b"></a><!-- doxytag: member="PA_MSG_INPUT" ref="gga61dadd085c1777f559549e05962b2c9ea085fcf4f4a5af364b26845da8d08b37b" args="" -->PA_MSG_INPUT</em>&nbsp;</td><td>
<p>Input message (ARM7-&gt;ARM9). </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga61dadd085c1777f559549e05962b2c9ea0b91530acc0797d12baee5a2e63d8b8c"></a><!-- doxytag: member="PA_MSG_MIC" ref="gga61dadd085c1777f559549e05962b2c9ea0b91530acc0797d12baee5a2e63d8b8c" args="" -->PA_MSG_MIC</em>&nbsp;</td><td>
<p>Microphone record message (ARM9-&gt;ARM7). </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga61dadd085c1777f559549e05962b2c9eabc30e4b3a25f3ead2db4e257768e3f51"></a><!-- doxytag: member="PA_MSG_DSLBRIGHT" ref="gga61dadd085c1777f559549e05962b2c9eabc30e4b3a25f3ead2db4e257768e3f51" args="" -->PA_MSG_DSLBRIGHT</em>&nbsp;</td><td>
<p>DS lite screen brightness message (ARM9-&gt;ARM7). </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga61dadd085c1777f559549e05962b2c9ea32ee9d7551b6d1fa4499f3f90693292c"></a><!-- doxytag: member="PA_MSG_PSG" ref="gga61dadd085c1777f559549e05962b2c9ea32ee9d7551b6d1fa4499f3f90693292c" args="" -->PA_MSG_PSG</em>&nbsp;</td><td>
<p>PSG play message (ARM9-&gt;ARM7). </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga726ca809ffd3d67ab4b8476646f26635"></a><!-- doxytag: member="PA_FifoMessages.h::@6" ref="ga726ca809ffd3d67ab4b8476646f26635" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><a class="el" href="a00070.htm#gaea4d9300a8124916272612c55f1e225a" title="Send a command value to the other CPU (same as PA_SendFifoVal but for readability)...">PA_SendFifoCmd()</a> commands. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga726ca809ffd3d67ab4b8476646f26635adc510df01111a791e6d42894e43c3e7b"></a><!-- doxytag: member="PA_MSG_MICSTOP" ref="gga726ca809ffd3d67ab4b8476646f26635adc510df01111a791e6d42894e43c3e7b" args="" -->PA_MSG_MICSTOP</em>&nbsp;</td><td>
<p>Microphone stop recording message (ARM9-&gt;ARM7). </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga2f2e605901a879f4643e2355a28bf34d"></a><!-- doxytag: member="PA_General.h::PA_SetVideoMode" ref="ga2f2e605901a879f4643e2355a28bf34d" args="(u8 screen, u8 mode)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_SetVideoMode </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>mode</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Change the video mode... Use this with caution. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>mode</em>&nbsp;</td><td>Mode 0 for normal, 1 for 1 rotating backgrounds, 2 for 2 </td></tr>
  </table>
  </dd>
</dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="a00002.htm#a1">Backgrounds/Effects/Mode7/source/main.c</a>.</dd>
</dl>
</div>
</div>
<a class="anchor" id="ga3eaabdd22f9766dcd814822822170d7c"></a><!-- doxytag: member="PA_General.h::PA_SetAutoCheckLid" ref="ga3eaabdd22f9766dcd814822822170d7c" args="(u8 on)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_SetAutoCheckLid </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>on</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Automatically check if the DS is closed in PA_WaitForVBL. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>on</em>&nbsp;</td><td>1 for on, 0 for off </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga371d4d3ff8a8ec77f0870474708686a4"></a><!-- doxytag: member="PA_General.h::PA_SetLedBlink" ref="ga371d4d3ff8a8ec77f0870474708686a4" args="(u8 blink, u8 speed)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void PA_SetLedBlink </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>blink</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>speed</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set teh DS Led blinking. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>blink</em>&nbsp;</td><td>1 for blinking, 0 for always on </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>speed</em>&nbsp;</td><td>Speed : 0 for slow, 1 for fast </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga811d7afe6fb63586b28f69e227254261"></a><!-- doxytag: member="PA_General.h::PA_SetScreenLight" ref="ga811d7afe6fb63586b28f69e227254261" args="(u8 screen, u8 light)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_SetScreenLight </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>light</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set on or off the screen's light. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>light</em>&nbsp;</td><td>Light, 1 for on, 0 for off </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga28e76a5dd9550a183950db58e6db55b8"></a><!-- doxytag: member="PA_General.h::PA_SetDSLBrightness" ref="ga28e76a5dd9550a183950db58e6db55b8" args="(u8 level)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_SetDSLBrightness </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>level</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the DS Lite Light level... </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>level</em>&nbsp;</td><td>Light level (0-3) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga187b1799eb5cb7e364363179e4b87763"></a><!-- doxytag: member="PA_General.h::PA_Locate" ref="ga187b1799eb5cb7e364363179e4b87763" args="(char *start, char *target, bool isDir, int depth, char *result)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool PA_Locate </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>isDir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>result</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Find a directory in the file system within a given depth. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>start</em>&nbsp;</td><td>from which directory to start, use "/" to search from the root </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>target</em>&nbsp;</td><td>what to look for: the name of a file or directory </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>isDir</em>&nbsp;</td><td>look for a directory or a file? </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>depth</em>&nbsp;</td><td>how much depth level (in number of directories) to traverse; limiting this speeds up the search on crowded cards. A reasonable value is, for example, 3. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>result</em>&nbsp;</td><td>pointer to a buffer where the result will be stored </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>true if the target was found </dd></dl>

</div>
</div>
</div>
<hr size="1"/><address style="text-align: right;"><small>Generated on Wed Jul 7 21:07:35 2010 for PAlib by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>
