<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>PAlib: Window system</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Window system</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00087.htm#ga5a9c76b3141c92bd38b3ac4ebe0ea084">PA_SetWin1XY</a>(screen, x1, y1, x2, y2)&nbsp;&nbsp;&nbsp;do{WIN1X(screen) = x2 + ((x1) &lt;&lt; 8); WIN1Y(screen) = y2 + ((y1) &lt;&lt; 8);}while(0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the X et Y coordinates of the rectangular second window. You'll also have to use PA_SetWin1 to chose which Backgrounds are visible and if sprites are too...  <a href="#ga5a9c76b3141c92bd38b3ac4ebe0ea084"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00087.htm#ga55b9543a3a02df6dacca4d037b1a4f32">PA_EnableWin0</a>(screen, bg_sprites)&nbsp;&nbsp;&nbsp;do{DISPCNTL(screen) |= WINDOW0; WININ(screen) &amp;= 255; WININ(screen) |= (bg_sprites);}while(0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enable and set which backgrounds will be visible and whether sprites will too or not, for Window 0. You'll then have to configure it with PA_SetWin0XY.  <a href="#ga55b9543a3a02df6dacca4d037b1a4f32"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00087.htm#ga50aa9022753ede7baacfb030987192b2">PA_DisableWin0</a>(screen)&nbsp;&nbsp;&nbsp;DISPCNTL(screen) &amp;= ~WINDOW0</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disable the first window...  <a href="#ga50aa9022753ede7baacfb030987192b2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00087.htm#ga5f79b9461d956b9d651da1f02b40d846">PA_EnableWin1</a>(screen, bg_sprites)&nbsp;&nbsp;&nbsp;do{DISPCNTL(screen) |= WINDOW1; WININ(screen) &amp;= 255; WININ(screen) |= ((bg_sprites) &lt;&lt; 8);}while(0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enable and set which backgrounds will be visible and whether sprites will too or not, for Window 1. You'll then have to configure it with PA_SetWin1XY.  <a href="#ga5f79b9461d956b9d651da1f02b40d846"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00087.htm#ga07bbe7bcc6ce24ecc6fa659b7aa6a1c7">PA_DisableWin1</a>(screen)&nbsp;&nbsp;&nbsp;DISPCNTL(screen) &amp;= ~WINDOW1</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disable the second window...  <a href="#ga07bbe7bcc6ce24ecc6fa659b7aa6a1c7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00087.htm#ga9b103ff3c54958df11b680b8b2fa4223">PA_DisableWinObj</a>(screen)&nbsp;&nbsp;&nbsp;DISPCNTL(screen) &amp;= ~WINDOWOBJ</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Disable the object window...  <a href="#ga9b103ff3c54958df11b680b8b2fa4223"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00087.htm#ga0fed4aefdb4a6e250d45f404a974368f">PA_SetOutWin</a>(screen, bg_sprites)&nbsp;&nbsp;&nbsp;do{WINOUT(screen) &amp;= ~255; WINOUT(screen) |= bg_sprites;}while(0)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set which backgrounds will be visible and whether sprites will too or not, outside of the windows.  <a href="#ga0fed4aefdb4a6e250d45f404a974368f"></a><br/></td></tr>
<tr><td colspan="2"><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00087.htm#ga1e75824d0fb82b9dc22bb76c242c34a9">PA_EnableWinObj</a> (u8 screen, u16 bg_sprites)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enable and set which backgrounds will be visible and whether sprites will too or not, for Object Winodw (created from sprites in Window mode).  <a href="#ga1e75824d0fb82b9dc22bb76c242c34a9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00087.htm#ga2ca165bbbbfadc82c41e6135cb45c86c">PA_WindowFade</a> (u8 screen, u8 type, u8 time)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This allows you to do fade in and out, using the window system.  <a href="#ga2ca165bbbbfadc82c41e6135cb45c86c"></a><br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Set up 2 windows and a possible object window... </p>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga5a9c76b3141c92bd38b3ac4ebe0ea084"></a><!-- doxytag: member="PA_Window.h::PA_SetWin1XY" ref="ga5a9c76b3141c92bd38b3ac4ebe0ea084" args="(screen, x1, y1, x2, y2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_SetWin1XY</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">x1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">y1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">x2, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">y2&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;do{WIN1X(screen) = x2 + ((x1) &lt;&lt; 8); WIN1Y(screen) = y2 + ((y1) &lt;&lt; 8);}while(0)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the X et Y coordinates of the rectangular second window. You'll also have to use PA_SetWin1 to chose which Backgrounds are visible and if sprites are too... </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x1</em>&nbsp;</td><td>X coordinate of the top left point </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y1</em>&nbsp;</td><td>Y coordinate of the top left point </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x2</em>&nbsp;</td><td>X coordinate of the bottom right point </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y2</em>&nbsp;</td><td>Y coordinate of the bottom right point </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga55b9543a3a02df6dacca4d037b1a4f32"></a><!-- doxytag: member="PA_Window.h::PA_EnableWin0" ref="ga55b9543a3a02df6dacca4d037b1a4f32" args="(screen, bg_sprites)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_EnableWin0</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_sprites&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;do{DISPCNTL(screen) |= WINDOW0; WININ(screen) &amp;= 255; WININ(screen) |= (bg_sprites);}while(0)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Enable and set which backgrounds will be visible and whether sprites will too or not, for Window 0. You'll then have to configure it with PA_SetWin0XY. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_sprites</em>&nbsp;</td><td>Backgrounds and sprites, use the following macro : WIN_BG0 | WIN_BG1 | WIN_BG2 | WIN_BG3 | WIN_OBJ | WIN_SFX (for special effects) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga50aa9022753ede7baacfb030987192b2"></a><!-- doxytag: member="PA_Window.h::PA_DisableWin0" ref="ga50aa9022753ede7baacfb030987192b2" args="(screen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_DisableWin0</td>
          <td>(</td>
          <td class="paramtype">screen&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;DISPCNTL(screen) &amp;= ~WINDOW0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Disable the first window... </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga5f79b9461d956b9d651da1f02b40d846"></a><!-- doxytag: member="PA_Window.h::PA_EnableWin1" ref="ga5f79b9461d956b9d651da1f02b40d846" args="(screen, bg_sprites)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_EnableWin1</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_sprites&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;do{DISPCNTL(screen) |= WINDOW1; WININ(screen) &amp;= 255; WININ(screen) |= ((bg_sprites) &lt;&lt; 8);}while(0)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Enable and set which backgrounds will be visible and whether sprites will too or not, for Window 1. You'll then have to configure it with PA_SetWin1XY. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_sprites</em>&nbsp;</td><td>Backgrounds and sprites, use the following macro : WIN_BG0 | WIN_BG1 | WIN_BG2 | WIN_BG3 | WIN_OBJ | WIN_SFX (for special effects) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga07bbe7bcc6ce24ecc6fa659b7aa6a1c7"></a><!-- doxytag: member="PA_Window.h::PA_DisableWin1" ref="ga07bbe7bcc6ce24ecc6fa659b7aa6a1c7" args="(screen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_DisableWin1</td>
          <td>(</td>
          <td class="paramtype">screen&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;DISPCNTL(screen) &amp;= ~WINDOW1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Disable the second window... </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga9b103ff3c54958df11b680b8b2fa4223"></a><!-- doxytag: member="PA_Window.h::PA_DisableWinObj" ref="ga9b103ff3c54958df11b680b8b2fa4223" args="(screen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_DisableWinObj</td>
          <td>(</td>
          <td class="paramtype">screen&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;DISPCNTL(screen) &amp;= ~WINDOWOBJ</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Disable the object window... </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga0fed4aefdb4a6e250d45f404a974368f"></a><!-- doxytag: member="PA_Window.h::PA_SetOutWin" ref="ga0fed4aefdb4a6e250d45f404a974368f" args="(screen, bg_sprites)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_SetOutWin</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_sprites&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;do{WINOUT(screen) &amp;= ~255; WINOUT(screen) |= bg_sprites;}while(0)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set which backgrounds will be visible and whether sprites will too or not, outside of the windows. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_sprites</em>&nbsp;</td><td>Backgrounds and sprites, use the following macro : WIN_BG0 | WIN_BG1 | WIN_BG2 | WIN_BG3 | WIN_OBJ </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga1e75824d0fb82b9dc22bb76c242c34a9"></a><!-- doxytag: member="PA_Window.h::PA_EnableWinObj" ref="ga1e75824d0fb82b9dc22bb76c242c34a9" args="(u8 screen, u16 bg_sprites)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_EnableWinObj </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>bg_sprites</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Enable and set which backgrounds will be visible and whether sprites will too or not, for Object Winodw (created from sprites in Window mode). </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_sprites</em>&nbsp;</td><td>Backgrounds and sprites, use the following macro : WIN_BG0 | WIN_BG1 | WIN_BG2 | WIN_BG3 | WIN_OBJ | WIN_SFX (for special effects) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2ca165bbbbfadc82c41e6135cb45c86c"></a><!-- doxytag: member="PA_Window.h::PA_WindowFade" ref="ga2ca165bbbbfadc82c41e6135cb45c86c" args="(u8 screen, u8 type, u8 time)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_WindowFade </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>time</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This allows you to do fade in and out, using the window system. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Screen... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>type</em>&nbsp;</td><td>Type... 8 different types are available (0-7) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>time</em>&nbsp;</td><td>Time, from 0 to 32 (included). 0 is a completely viewable screen, 32 is completely out </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div>
<hr size="1"/><address style="text-align: right;"><small>Generated on Wed Jul 7 21:07:36 2010 for PAlib by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>
