<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>PAlib: Old large background system</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Old large background system</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#ga9f6d1aa062e34ce6f00cc597d5e816c6">PA_LoadLargeBg</a>(screen, bg_select, bg_tiles, bg_map, color_mode, lx, ly)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">[DEPRECATED] Completely load and initialise a background with infinite scrolling (usefull if larger or wider than 512 pixels)  <a href="#ga9f6d1aa062e34ce6f00cc597d5e816c6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#ga1f23aca5c32f4781bc0f952eae0d609f">PA_LoadPAGfxLargeBg</a>(screen, bg_number, bg_name)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">[DEPRECATED] Completely load and initialise a background with infinite scrolling (usefull if larger or wider than 512 pixels), converted with PAGfx  <a href="#ga1f23aca5c32f4781bc0f952eae0d609f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#gadabe8ab915314c5bf00d29d9063eaf37">PA_LoadLargeBgEx</a>(screen, bg_select, bg_tiles, tile_size, bg_map, color_mode, lx, ly)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">[DEPRECATED] Completely load and initialise a background with infinite scrolling (usefull if larger or wider than 512 pixels), but here you can put yourself the tile size...  <a href="#gadabe8ab915314c5bf00d29d9063eaf37"></a><br/></td></tr>
<tr><td colspan="2"><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#gaed6167c4fb05f84311266a14843f2b86">PA_InfLargeScrollX</a> (u8 screen, u8 bg_select, s32 x)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scroll a large infinite scrolling background horizontaly. It must have been initialised with PA_LoadLargeBg.  <a href="#gaed6167c4fb05f84311266a14843f2b86"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#gaf457c8312399c7cef3737b2b3547ccd9">PA_InfLargeScrollY</a> (u8 screen, u8 bg_select, s32 y)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scroll a large infinite scrolling background vertically. It must have been initialised with PA_LoadLargeBg.  <a href="#gaf457c8312399c7cef3737b2b3547ccd9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#gaa99bcb6100929a7cfbe58e03cdf35cc9">PA_InfLargeScrollXY</a> (u8 screen, u8 bg_select, s32 x, s32 y)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scroll a large infinite scrolling background horizontaly and vertically. It must have been initialised with PA_LoadLargeBg.  <a href="#gaa99bcb6100929a7cfbe58e03cdf35cc9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#gafc9cfabbb48ba17fce2b9e46658a2b79">PA_LargeScrollX</a> (u8 screen, u8 bg_select, s32 x)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scroll a large background horizontaly. It must have been initialised with PA_LoadLargeBg. This function does not wrap around, but is faster than the InfLargeScroll...  <a href="#gafc9cfabbb48ba17fce2b9e46658a2b79"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#ga81fc6dc7f2fcc55d5031f57cfe3c4794">PA_LargeScrollY</a> (u8 screen, u8 bg_select, s32 y)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scroll a large background vertically. It must have been initialised with PA_LoadLargeBg. This function does not wrap around, but is faster than the InfLargeScroll...  <a href="#ga81fc6dc7f2fcc55d5031f57cfe3c4794"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#gaec68376f636a76482ac45dc1c6ec87c4">PA_LargeScrollXY</a> (u8 screen, u8 bg_select, s32 x, s32 y)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scroll a large background horizontaly and vertically. It must have been initialised with PA_LoadLargeBg. This function does not wrap around, but is faster than the InfLargeScroll...  <a href="#gaec68376f636a76482ac45dc1c6ec87c4"></a><br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Old LargeMap functions, obsoleted by <a class="el" href="a00065.htm#gadf0fb1a1ec794471d2e143ef88a3f4a2" title="Load a background (EasyBg or RotBg).">PA_LoadBackground()</a> </p>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga9f6d1aa062e34ce6f00cc597d5e816c6"></a><!-- doxytag: member="PA_BgLargeMap.h::PA_LoadLargeBg" ref="ga9f6d1aa062e34ce6f00cc597d5e816c6" args="(screen, bg_select, bg_tiles, bg_map, color_mode, lx, ly)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_LoadLargeBg</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_select, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_tiles, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_map, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">color_mode, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">lx, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ly&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span>{\
    PA_DEPRECATED_MACRO;\
    PA_BgInfo[screen][bg_select].NTiles = SIZEOF_16BIT(bg_tiles)&gt;&gt;5;\
    <span class="keywordflow">if</span> (PA_BgInfo[screen][bg_select].NTiles &lt; MAX_TILES) {<a class="code" href="a00065.htm#ga2326c1519a3901bac60df6f1ee2ee9cb" title="[DEPRECATED] Simple way to load a Background. Combines PA_InitBg, PA_LoadBgTiles...">PA_LoadSimpleBg</a>(screen, bg_select, bg_tiles, NULL, BG_512X256, 0, color_mode);}\
    <span class="keywordflow">else</span>{PA_LoadTileEngine(screen, bg_select, (<span class="keywordtype">void</span>*)bg_tiles);}\
    PA_InitLargeBg(screen, bg_select, lx, ly, (<span class="keywordtype">void</span>*)bg_map);}<span class="keywordflow">while</span>(0)
</pre></div>
<p>[DEPRECATED] Completely load and initialise a background with infinite scrolling (usefull if larger or wider than 512 pixels) </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000002">Deprecated:</a></b></dt><dd></dd></dl>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Chose de screen (0 or 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_select</em>&nbsp;</td><td>Background number to load (from 0 to 3) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_tiles</em>&nbsp;</td><td>Name of the tiles' info (example: ship_Tiles) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_map</em>&nbsp;</td><td>Name of the map's info (example : ship_Map) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color_mode</em>&nbsp;</td><td>Color mode : 0 for 16 color mode, 1 for 256... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lx</em>&nbsp;</td><td>Width, in tiles. So a 512 pixel wide map is 64 tiles wide... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ly</em>&nbsp;</td><td>Height, in tiles. So a 512 pixel high map is 64 tiles high... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga1f23aca5c32f4781bc0f952eae0d609f"></a><!-- doxytag: member="PA_BgLargeMap.h::PA_LoadPAGfxLargeBg" ref="ga1f23aca5c32f4781bc0f952eae0d609f" args="(screen, bg_number, bg_name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_LoadPAGfxLargeBg</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_number, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_name&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span>{\
    PA_DEPRECATED_MACRO;\
    <a class="code" href="a00079.htm#gad312e63462eef876094c3e80853031f8" title="Load a 256 color palette in the Background palettes.">PA_LoadBgPal</a>(screen, bg_number, (<span class="keywordtype">void</span>*)bg_name##_Pal); \
    <a class="code" href="a00063.htm#ga9f6d1aa062e34ce6f00cc597d5e816c6" title="[DEPRECATED] Completely load and initialise a background with infinite scrolling...">PA_LoadLargeBg</a>(screen, bg_number, bg_name##_Tiles, bg_name##_Map, 1, (bg_name##_Info[1]) &gt;&gt; 3, (bg_name##_Info[2]) &gt;&gt; 3);}<span class="keywordflow">while</span>(0)
</pre></div>
<p>[DEPRECATED] Completely load and initialise a background with infinite scrolling (usefull if larger or wider than 512 pixels), converted with PAGfx </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000003">Deprecated:</a></b></dt><dd></dd></dl>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Chose de screen (0 or 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_number</em>&nbsp;</td><td>Background number to load (from 0 to 3) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_name</em>&nbsp;</td><td>Background name, in PAGfx </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gadabe8ab915314c5bf00d29d9063eaf37"></a><!-- doxytag: member="PA_BgLargeMap.h::PA_LoadLargeBgEx" ref="gadabe8ab915314c5bf00d29d9063eaf37" args="(screen, bg_select, bg_tiles, tile_size, bg_map, color_mode, lx, ly)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_LoadLargeBgEx</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_select, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_tiles, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">tile_size, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bg_map, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">color_mode, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">lx, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ly&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span>{\
    PA_DEPRECATED_MACRO;\
    PA_BgInfo[screen][bg_select].NTiles = SIZEOF_16BIT(bg_tiles)&gt;&gt;5;\
    <span class="keywordflow">if</span> (PA_BgInfo[screen][bg_select].NTiles &lt; MAX_TILES) {<a class="code" href="a00065.htm#gabef4e0b201a2b9a09290caa149d25c2b" title="[DEPRECATED] Simplest way to load a Background. Combines PA_InitBg, PA_LoadBgTiles...">PA_LoadBg</a>(screen, bg_select, bg_tiles, tile_size, NULL, BG_512X256, 0, color_mode);}\
    <span class="keywordflow">else</span>{PA_LoadTileEngine(screen, bg_select, bg_tiles);}\
    PA_InitLargeBg(screen, bg_select, lx, ly, (<span class="keywordtype">void</span>*)bg_map);}<span class="keywordflow">while</span>(0)
</pre></div>
<p>[DEPRECATED] Completely load and initialise a background with infinite scrolling (usefull if larger or wider than 512 pixels), but here you can put yourself the tile size... </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.htm#_deprecated000004">Deprecated:</a></b></dt><dd></dd></dl>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Chose de screen (0 or 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_select</em>&nbsp;</td><td>Background number to load (from 0 to 3) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_tiles</em>&nbsp;</td><td>Name of the tiles' info (example: ship_Tiles) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>tile_size</em>&nbsp;</td><td>Size of your tileset </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_map</em>&nbsp;</td><td>Name of the map's info (example : ship_Map) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color_mode</em>&nbsp;</td><td>Color mode : 0 for 16 color mode, 1 for 256... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>lx</em>&nbsp;</td><td>Width, in tiles. So a 512 pixel wide map is 64 tiles wide... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ly</em>&nbsp;</td><td>Height, in tiles. So a 512 pixel high map is 64 tiles high... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="gaed6167c4fb05f84311266a14843f2b86"></a><!-- doxytag: member="PA_BgLargeMap.h::PA_InfLargeScrollX" ref="gaed6167c4fb05f84311266a14843f2b86" args="(u8 screen, u8 bg_select, s32 x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_InfLargeScrollX </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>bg_select</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s32&nbsp;</td>
          <td class="paramname"> <em>x</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Scroll a large infinite scrolling background horizontaly. It must have been initialised with PA_LoadLargeBg. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Chose de screen (0 or 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_select</em>&nbsp;</td><td>Background number to load (from 0 to 3) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>X value to scroll </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf457c8312399c7cef3737b2b3547ccd9"></a><!-- doxytag: member="PA_BgLargeMap.h::PA_InfLargeScrollY" ref="gaf457c8312399c7cef3737b2b3547ccd9" args="(u8 screen, u8 bg_select, s32 y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_InfLargeScrollY </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>bg_select</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s32&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Scroll a large infinite scrolling background vertically. It must have been initialised with PA_LoadLargeBg. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Chose de screen (0 or 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_select</em>&nbsp;</td><td>Background number to load (from 0 to 3) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Y value to scroll </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa99bcb6100929a7cfbe58e03cdf35cc9"></a><!-- doxytag: member="PA_BgLargeMap.h::PA_InfLargeScrollXY" ref="gaa99bcb6100929a7cfbe58e03cdf35cc9" args="(u8 screen, u8 bg_select, s32 x, s32 y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_InfLargeScrollXY </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>bg_select</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s32&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s32&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Scroll a large infinite scrolling background horizontaly and vertically. It must have been initialised with PA_LoadLargeBg. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Chose de screen (0 or 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_select</em>&nbsp;</td><td>Background number to load (from 0 to 3) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>X value to scroll </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Y value to scroll </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gafc9cfabbb48ba17fce2b9e46658a2b79"></a><!-- doxytag: member="PA_BgLargeMap.h::PA_LargeScrollX" ref="gafc9cfabbb48ba17fce2b9e46658a2b79" args="(u8 screen, u8 bg_select, s32 x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_LargeScrollX </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>bg_select</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s32&nbsp;</td>
          <td class="paramname"> <em>x</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Scroll a large background horizontaly. It must have been initialised with PA_LoadLargeBg. This function does not wrap around, but is faster than the InfLargeScroll... </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Chose de screen (0 or 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_select</em>&nbsp;</td><td>Background number to load (from 0 to 3) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>X value to scroll </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga81fc6dc7f2fcc55d5031f57cfe3c4794"></a><!-- doxytag: member="PA_BgLargeMap.h::PA_LargeScrollY" ref="ga81fc6dc7f2fcc55d5031f57cfe3c4794" args="(u8 screen, u8 bg_select, s32 y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_LargeScrollY </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>bg_select</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s32&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Scroll a large background vertically. It must have been initialised with PA_LoadLargeBg. This function does not wrap around, but is faster than the InfLargeScroll... </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Chose de screen (0 or 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_select</em>&nbsp;</td><td>Background number to load (from 0 to 3) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Y value to scroll </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaec68376f636a76482ac45dc1c6ec87c4"></a><!-- doxytag: member="PA_BgLargeMap.h::PA_LargeScrollXY" ref="gaec68376f636a76482ac45dc1c6ec87c4" args="(u8 screen, u8 bg_select, s32 x, s32 y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_LargeScrollXY </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>bg_select</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s32&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s32&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Scroll a large background horizontaly and vertically. It must have been initialised with PA_LoadLargeBg. This function does not wrap around, but is faster than the InfLargeScroll... </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Chose de screen (0 or 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_select</em>&nbsp;</td><td>Background number to load (from 0 to 3) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>X value to scroll </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Y value to scroll </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div>
<hr size="1"/><address style="text-align: right;"><small>Generated on Wed Jul 7 21:07:35 2010 for PAlib by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>
