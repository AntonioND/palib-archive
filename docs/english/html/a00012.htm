<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>PAlib: PA::Sprite Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="examples.htm"><span>Examples</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="functions.htm"><span>Data&nbsp;Fields</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="a00060.htm">PA</a>::<a class="el" href="a00012.htm">Sprite</a>
  </div>
</div>
<div class="contents">
<h1>PA::Sprite Class Reference</h1><!-- doxytag: class="PA::Sprite" -->
<p>Wrapper class for sprites.  
<a href="#_details">More...</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a30cd378bf30f02adc82de4db33c9053b"></a><!-- doxytag: member="PA::Sprite::Sprite" ref="a30cd378bf30f02adc82de4db33c9053b" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a30cd378bf30f02adc82de4db33c9053b">Sprite</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Empty constructor. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a58b8a7d6a329b982b5fd17e86f53d01f"></a><!-- doxytag: member="PA::Sprite::Sprite" ref="a58b8a7d6a329b982b5fd17e86f53d01f" args="(int scr, int sprn)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a58b8a7d6a329b982b5fd17e86f53d01f">Sprite</a> (int scr, int sprn)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Normal constructor. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5753a71f03943b2ce7cd2d71c82cce7d"></a><!-- doxytag: member="PA::Sprite::init" ref="a5753a71f03943b2ce7cd2d71c82cce7d" args="(int scr, int sprn)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a5753a71f03943b2ce7cd2d71c82cce7d">init</a> (int scr, int sprn)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initialize function. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9464e42a62545c8930890d6e286d8fc9"></a><!-- doxytag: member="PA::Sprite::create" ref="a9464e42a62545c8930890d6e286d8fc9" args="(void *gfx, int shape, int size, int paln)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a9464e42a62545c8930890d6e286d8fc9">create</a> (void *gfx, int shape, int size, int paln)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Create sprite. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaf3e8ba4df0e0b8ad71efcbb447981c8"></a><!-- doxytag: member="PA::Sprite::create" ref="aaf3e8ba4df0e0b8ad71efcbb447981c8" args="(u16 gfx, int shape, int size, int paln)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#aaf3e8ba4df0e0b8ad71efcbb447981c8">create</a> (u16 gfx, int shape, int size, int paln)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Create sprite from existing GFX. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adbbb58e2b58b1e4b2ee95b91a8e7213f"></a><!-- doxytag: member="PA::Sprite::remove" ref="adbbb58e2b58b1e4b2ee95b91a8e7213f" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#adbbb58e2b58b1e4b2ee95b91a8e7213f">remove</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Delete sprite. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4440d78c8051cdf526f2ff561b1b9e27"></a><!-- doxytag: member="PA::Sprite::setpalette" ref="a4440d78c8051cdf526f2ff561b1b9e27" args="(int paln)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a4440d78c8051cdf526f2ff561b1b9e27">setpalette</a> (int paln)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set palette. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aacefb8fd9378ee50c53cc42f16da7135"></a><!-- doxytag: member="PA::Sprite::setgfx" ref="aacefb8fd9378ee50c53cc42f16da7135" args="(int gfxn)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#aacefb8fd9378ee50c53cc42f16da7135">setgfx</a> (int gfxn)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set GFX. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac39a3deb46936c7ed77328b5351c479f"></a><!-- doxytag: member="PA::Sprite::render" ref="ac39a3deb46936c7ed77328b5351c479f" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#ac39a3deb46936c7ed77328b5351c479f">render</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Render (more like update position). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aef7b28139e7a80d3f3fbf511b6192b83"></a><!-- doxytag: member="PA::Sprite::move" ref="aef7b28139e7a80d3f3fbf511b6192b83" args="(const Fixed &amp;x, const Fixed &amp;y)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#aef7b28139e7a80d3f3fbf511b6192b83">move</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;x, const <a class="el" href="a00004.htm">Fixed</a> &amp;y)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Move (fixed point version). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0e5a2178c3f7572b0e76fd146fc47e09"></a><!-- doxytag: member="PA::Sprite::move" ref="a0e5a2178c3f7572b0e76fd146fc47e09" args="(int x, int y)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a0e5a2178c3f7572b0e76fd146fc47e09">move</a> (int x, int y)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Move (integer version). <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a42ec10df5a835db9483cdd3bed22c4aa"></a><!-- doxytag: member="PA::Sprite::hflip" ref="a42ec10df5a835db9483cdd3bed22c4aa" args="(bool flip)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a42ec10df5a835db9483cdd3bed22c4aa">hflip</a> (bool flip)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set HFlip. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6bfc406e1a51f8d8b3800ff0eb25cda3"></a><!-- doxytag: member="PA::Sprite::vflip" ref="a6bfc406e1a51f8d8b3800ff0eb25cda3" args="(bool flip)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a6bfc406e1a51f8d8b3800ff0eb25cda3">vflip</a> (bool flip)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set VFlip. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9e46a2cecaedbab76be6cb4d62855b94"></a><!-- doxytag: member="PA::Sprite::dblsize" ref="a9e46a2cecaedbab76be6cb4d62855b94" args="(bool dblsize)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a9e46a2cecaedbab76be6cb4d62855b94">dblsize</a> (bool dblsize)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set doublesize. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8356bfdbb10675fd5e0183a95f29b0c6"></a><!-- doxytag: member="PA::Sprite::priority" ref="a8356bfdbb10675fd5e0183a95f29b0c6" args="(int prio)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a8356bfdbb10675fd5e0183a95f29b0c6">priority</a> (int prio)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set priority. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9ca4c90002b0def000f334fae45658f3"></a><!-- doxytag: member="PA::Sprite::bindrotset" ref="a9ca4c90002b0def000f334fae45658f3" args="(int rotset)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a9ca4c90002b0def000f334fae45658f3">bindrotset</a> (int rotset)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Bind rotset. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a76e1f012ee512d8e4555a3467c71bfa0"></a><!-- doxytag: member="PA::Sprite::debindrotset" ref="a76e1f012ee512d8e4555a3467c71bfa0" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a76e1f012ee512d8e4555a3467c71bfa0">debindrotset</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Debind rotset. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a89b484bef6945a8df0a459446dbfe68e"></a><!-- doxytag: member="PA::Sprite::rotate" ref="a89b484bef6945a8df0a459446dbfe68e" args="(int angle)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a89b484bef6945a8df0a459446dbfe68e">rotate</a> (int angle)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Rotate. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1f2c9a03d94ad2a2e381fcab8c74c137"></a><!-- doxytag: member="PA::Sprite::zoom" ref="a1f2c9a03d94ad2a2e381fcab8c74c137" args="(int zx, int zy)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a1f2c9a03d94ad2a2e381fcab8c74c137">zoom</a> (int zx, int zy)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Zoom. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6f68e077cb828793f392c3758adc7cea"></a><!-- doxytag: member="PA::Sprite::rotozoom" ref="a6f68e077cb828793f392c3758adc7cea" args="(int angle, int zx, int zy)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a6f68e077cb828793f392c3758adc7cea">rotozoom</a> (int angle, int zx, int zy)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Rotate and zoom. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4a87668eb7460c6158a7d24d0512f363"></a><!-- doxytag: member="PA::Sprite::frame" ref="a4a87668eb7460c6158a7d24d0512f363" args="(int frame)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a4a87668eb7460c6158a7d24d0512f363">frame</a> (int frame)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set frame. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad7b9b230120792c0bacd00e7d3f9f406"></a><!-- doxytag: member="PA::Sprite::startanim" ref="ad7b9b230120792c0bacd00e7d3f9f406" args="(int begin, int end, int speed, int animtype=ANIM_LOOP, int ncycles=&#45;1)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#ad7b9b230120792c0bacd00e7d3f9f406">startanim</a> (int begin, int end, int speed, int animtype=ANIM_LOOP, int ncycles=-1)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Start animation. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aee68df136188ec17cb3b56f9e7903a99"></a><!-- doxytag: member="PA::Sprite::pauseanim" ref="aee68df136188ec17cb3b56f9e7903a99" args="(bool pause=true)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#aee68df136188ec17cb3b56f9e7903a99">pauseanim</a> (bool pause=true)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pause animation. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a680b2c27fdd400471a9f91268bbc505e"></a><!-- doxytag: member="PA::Sprite::stopanim" ref="a680b2c27fdd400471a9f91268bbc505e" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#a680b2c27fdd400471a9f91268bbc505e">stopanim</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Stop animation. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa631c18ee2f4cec674c33cfc10072973"></a><!-- doxytag: member="PA::Sprite::animspeed" ref="aa631c18ee2f4cec674c33cfc10072973" args="(int speed)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00012.htm#aa631c18ee2f4cec674c33cfc10072973">animspeed</a> (int speed)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set animation speed. <br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Wrapper class for sprites. </p>
</div>
<hr size="1"/><address style="text-align: right;"><small>Generated on Wed Jul 7 21:07:36 2010 for PAlib by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>
