<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>PAlib: Référence de la classe PA::Fixed</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Généré par Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.htm"><span>Page&nbsp;principale</span></a></li>
      <li><a href="pages.htm"><span>Pages&nbsp;associées</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="namespaces.htm"><span>Espaces&nbsp;de&nbsp;nommage</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Structures&nbsp;de&nbsp;données</span></a></li>
      <li><a href="examples.htm"><span>Exemples</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Structures&nbsp;de&nbsp;données</span></a></li>
      <li><a href="functions.htm"><span>Champs&nbsp;de&nbsp;donnée</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="a00060.htm">PA</a>::<a class="el" href="a00004.htm">Fixed</a>
  </div>
</div>
<div class="contents">
<h1>Référence de la classe PA::Fixed</h1><!-- doxytag: class="PA::Fixed" -->
<p>Fixed-point wrapper class.  
<a href="#_details">Plus de détails...</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Fonctions membres publiques</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0a39a0547f2a0e36bc5f3e66939a46a1"></a><!-- doxytag: member="PA::Fixed::Fixed" ref="a0a39a0547f2a0e36bc5f3e66939a46a1" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a0a39a0547f2a0e36bc5f3e66939a46a1">Fixed</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Empty constructor. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae8794bf3ebc461c70c729c55deb4f8b8"></a><!-- doxytag: member="PA::Fixed::Fixed" ref="ae8794bf3ebc461c70c729c55deb4f8b8" args="(const Fixed &amp;a)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#ae8794bf3ebc461c70c729c55deb4f8b8">Fixed</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Copy constructor. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7bc03f4176e433deb54afa0eb29a00d4"></a><!-- doxytag: member="PA::Fixed::Fixed" ref="a7bc03f4176e433deb54afa0eb29a00d4" args="(int a)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a7bc03f4176e433deb54afa0eb29a00d4">Fixed</a> (int a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">int constructor. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a814b36aa50dbcb0230f3453e17b88fac"></a><!-- doxytag: member="PA::Fixed::Fixed" ref="a814b36aa50dbcb0230f3453e17b88fac" args="(float a)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a814b36aa50dbcb0230f3453e17b88fac">Fixed</a> (float a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">float constructor. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a97bb7676a4040ce629fa2078ac34153a"></a><!-- doxytag: member="PA::Fixed::operator int" ref="a97bb7676a4040ce629fa2078ac34153a" args="() const " -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a97bb7676a4040ce629fa2078ac34153a">operator int</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">int cast. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2f00e2809417a91a19fe8bd2ddada69e"></a><!-- doxytag: member="PA::Fixed::operator float" ref="a2f00e2809417a91a19fe8bd2ddada69e" args="() const " -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a2f00e2809417a91a19fe8bd2ddada69e">operator float</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">float cast. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac562dabd85e5fcfaaec3685f0434df5f"></a><!-- doxytag: member="PA::Fixed::operator bool" ref="ac562dabd85e5fcfaaec3685f0434df5f" args="() const " -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#ac562dabd85e5fcfaaec3685f0434df5f">operator bool</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">bool cast. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a392869f605df75ea693c9568e94c1ad9"></a><!-- doxytag: member="PA::Fixed::operator char" ref="a392869f605df75ea693c9568e94c1ad9" args="() const " -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a392869f605df75ea693c9568e94c1ad9">operator char</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">char cast. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac0c7a507ad944b4edd459ae4210766a9"></a><!-- doxytag: member="PA::Fixed::operator short" ref="ac0c7a507ad944b4edd459ae4210766a9" args="() const " -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#ac0c7a507ad944b4edd459ae4210766a9">operator short</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">short cast. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab40ffe25e83d3961be6185813e4a1d44"></a><!-- doxytag: member="PA::Fixed::operator long long" ref="ab40ffe25e83d3961be6185813e4a1d44" args="() const " -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#ab40ffe25e83d3961be6185813e4a1d44">operator long long</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">long long cast. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aefa271c6d0239982cd590e38b753859e"></a><!-- doxytag: member="PA::Fixed::operator=" ref="aefa271c6d0239982cd590e38b753859e" args="(const Fixed &amp;a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#aefa271c6d0239982cd590e38b753859e">operator=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Assignment operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1fda0ddb98c202f6a2cbca9898c48d0a"></a><!-- doxytag: member="PA::Fixed::operator+" ref="a1fda0ddb98c202f6a2cbca9898c48d0a" args="(const Fixed &amp;a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a1fda0ddb98c202f6a2cbca9898c48d0a">operator+</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Addition operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a15823f02cf2957d49663d7dcd872595c"></a><!-- doxytag: member="PA::Fixed::operator&#45;" ref="a15823f02cf2957d49663d7dcd872595c" args="(const Fixed &amp;a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a15823f02cf2957d49663d7dcd872595c">operator-</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Subtraction operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a22a7cae965caadf44043d6ccc4821c3d"></a><!-- doxytag: member="PA::Fixed::operator*" ref="a22a7cae965caadf44043d6ccc4821c3d" args="(const Fixed &amp;a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a22a7cae965caadf44043d6ccc4821c3d">operator*</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Multiplication operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5ceeddbecb6bd3f141f5e4a10b66ddbb"></a><!-- doxytag: member="PA::Fixed::operator/" ref="a5ceeddbecb6bd3f141f5e4a10b66ddbb" args="(const Fixed &amp;a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a5ceeddbecb6bd3f141f5e4a10b66ddbb">operator/</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Division operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae0b08c883e3fa40cb23c3b47df7fddca"></a><!-- doxytag: member="PA::Fixed::operator%" ref="ae0b08c883e3fa40cb23c3b47df7fddca" args="(const Fixed &amp;a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#ae0b08c883e3fa40cb23c3b47df7fddca">operator%</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Modulo operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adfb671d6c1b8b9e6b36159852fb504fb"></a><!-- doxytag: member="PA::Fixed::operator++" ref="adfb671d6c1b8b9e6b36159852fb504fb" args="()" -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#adfb671d6c1b8b9e6b36159852fb504fb">operator++</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pre-increment operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a02f40e20fe9cca357be63fb246e9a3af"></a><!-- doxytag: member="PA::Fixed::operator&#45;&#45;" ref="a02f40e20fe9cca357be63fb246e9a3af" args="()" -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a02f40e20fe9cca357be63fb246e9a3af">operator--</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pre-decrement operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a207c7b95ce0f29b6a5b4fa8ccd826d14"></a><!-- doxytag: member="PA::Fixed::operator++" ref="a207c7b95ce0f29b6a5b4fa8ccd826d14" args="(int)" -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a207c7b95ce0f29b6a5b4fa8ccd826d14">operator++</a> (int)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Post-increment operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a608d723372fcc1591cf63b1cc32c3cbc"></a><!-- doxytag: member="PA::Fixed::operator&#45;&#45;" ref="a608d723372fcc1591cf63b1cc32c3cbc" args="(int)" -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a608d723372fcc1591cf63b1cc32c3cbc">operator--</a> (int)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Post-decrement operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a607a141681732a5ed1eb8cf75880cd07"></a><!-- doxytag: member="PA::Fixed::operator&#45;" ref="a607a141681732a5ed1eb8cf75880cd07" args="() const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a607a141681732a5ed1eb8cf75880cd07">operator-</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Negation operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acd7df633eccb41fefb39ad7130d36a57"></a><!-- doxytag: member="PA::Fixed::operator~" ref="acd7df633eccb41fefb39ad7130d36a57" args="() const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#acd7df633eccb41fefb39ad7130d36a57">operator~</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary negation operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6e34d7de279a98feb0389995fc7c6bf1"></a><!-- doxytag: member="PA::Fixed::operator+=" ref="a6e34d7de279a98feb0389995fc7c6bf1" args="(const Fixed &amp;a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a6e34d7de279a98feb0389995fc7c6bf1">operator+=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Addition and assignment operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a55cc7f39bf6bf558069d2de84951a0a2"></a><!-- doxytag: member="PA::Fixed::operator&#45;=" ref="a55cc7f39bf6bf558069d2de84951a0a2" args="(const Fixed &amp;a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a55cc7f39bf6bf558069d2de84951a0a2">operator-=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Subtraction and assignment operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a25bf7c212f0ec031079fd2ef3589b1b7"></a><!-- doxytag: member="PA::Fixed::operator*=" ref="a25bf7c212f0ec031079fd2ef3589b1b7" args="(const Fixed &amp;a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a25bf7c212f0ec031079fd2ef3589b1b7">operator*=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Multiplication and assignment operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2f848f8ebaf7026d6bade63f4a67f392"></a><!-- doxytag: member="PA::Fixed::operator%=" ref="a2f848f8ebaf7026d6bade63f4a67f392" args="(const Fixed &amp;a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a2f848f8ebaf7026d6bade63f4a67f392">operator%=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Modulo and assignment operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a70ba6787d4157bfdae37d43553f22bd2"></a><!-- doxytag: member="PA::Fixed::operator==" ref="a70ba6787d4157bfdae37d43553f22bd2" args="(const Fixed &amp;a) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a70ba6787d4157bfdae37d43553f22bd2">operator==</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Equals operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa2a224cd6f8670ff63a6a4b11b991515"></a><!-- doxytag: member="PA::Fixed::operator!=" ref="aa2a224cd6f8670ff63a6a4b11b991515" args="(const Fixed &amp;a) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#aa2a224cd6f8670ff63a6a4b11b991515">operator!=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Not-equals operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8cfd5b1de99c7dabfa7cceb7d147d7c6"></a><!-- doxytag: member="PA::Fixed::operator&lt;=" ref="a8cfd5b1de99c7dabfa7cceb7d147d7c6" args="(const Fixed &amp;a) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a8cfd5b1de99c7dabfa7cceb7d147d7c6">operator&lt;=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Less-or-equal operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a74c34214e512d641e927d0ed26a3e5f5"></a><!-- doxytag: member="PA::Fixed::operator&gt;=" ref="a74c34214e512d641e927d0ed26a3e5f5" args="(const Fixed &amp;a) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a74c34214e512d641e927d0ed26a3e5f5">operator&gt;=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Greater-or-equal operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adfaaf2c5a6f1f6674ca98672c920d202"></a><!-- doxytag: member="PA::Fixed::operator&lt;" ref="adfaaf2c5a6f1f6674ca98672c920d202" args="(const Fixed &amp;a) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#adfaaf2c5a6f1f6674ca98672c920d202">operator&lt;</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Less-than operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8f7f001d22a54e4e7149b7e1719f52ea"></a><!-- doxytag: member="PA::Fixed::operator&gt;" ref="a8f7f001d22a54e4e7149b7e1719f52ea" args="(const Fixed &amp;a) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a8f7f001d22a54e4e7149b7e1719f52ea">operator&gt;</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Greater-than operator. int and float versions also available. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a92a1dc62edd516e080190cc02d0b1246"></a><!-- doxytag: member="PA::Fixed::operator&lt;&lt;" ref="a92a1dc62edd516e080190cc02d0b1246" args="(int a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a92a1dc62edd516e080190cc02d0b1246">operator&lt;&lt;</a> (int a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Left shift operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac5fcedbff78466f2bf56a1d3339ca248"></a><!-- doxytag: member="PA::Fixed::operator&gt;&gt;" ref="ac5fcedbff78466f2bf56a1d3339ca248" args="(int a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#ac5fcedbff78466f2bf56a1d3339ca248">operator&gt;&gt;</a> (int a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Right shift operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acaa1f673c4017a2cb9d2990a34bd6cce"></a><!-- doxytag: member="PA::Fixed::operator&lt;&lt;=" ref="acaa1f673c4017a2cb9d2990a34bd6cce" args="(int a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#acaa1f673c4017a2cb9d2990a34bd6cce">operator&lt;&lt;=</a> (int a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Left shift and assign operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a189c892a456a08d9eeda207e904eaba2"></a><!-- doxytag: member="PA::Fixed::operator&gt;&gt;=" ref="a189c892a456a08d9eeda207e904eaba2" args="(int a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a189c892a456a08d9eeda207e904eaba2">operator&gt;&gt;=</a> (int a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Right shift and assign operator. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a60f02a90cb2b9df04b37dde185a0b714"></a><!-- doxytag: member="PA::Fixed::operator&amp;" ref="a60f02a90cb2b9df04b37dde185a0b714" args="(u32 a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a60f02a90cb2b9df04b37dde185a0b714">operator&amp;</a> (u32 a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary AND operator, u32 version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa593e4a1dc205080ee62f4a3e2057bbc"></a><!-- doxytag: member="PA::Fixed::operator|" ref="aa593e4a1dc205080ee62f4a3e2057bbc" args="(u32 a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#aa593e4a1dc205080ee62f4a3e2057bbc">operator|</a> (u32 a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary OR operator, u32 version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a75130184450ecb3b92eae73feaa28d73"></a><!-- doxytag: member="PA::Fixed::operator^" ref="a75130184450ecb3b92eae73feaa28d73" args="(u32 a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a75130184450ecb3b92eae73feaa28d73">operator^</a> (u32 a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary XOR operator, u32 version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af972a3407e2e6a9e98bb1227ba97b20d"></a><!-- doxytag: member="PA::Fixed::operator&amp;" ref="af972a3407e2e6a9e98bb1227ba97b20d" args="(const Fixed &amp;a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#af972a3407e2e6a9e98bb1227ba97b20d">operator&amp;</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary AND operator, <a class="el" href="a00004.htm" title="Fixed-point wrapper class.">Fixed</a> version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab87e854a3f5b138d63af7f79bda657f2"></a><!-- doxytag: member="PA::Fixed::operator|" ref="ab87e854a3f5b138d63af7f79bda657f2" args="(const Fixed &amp;a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#ab87e854a3f5b138d63af7f79bda657f2">operator|</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary OR operator, <a class="el" href="a00004.htm" title="Fixed-point wrapper class.">Fixed</a> version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4f2cd2d90f9f9b28eb54e136ae5ec6eb"></a><!-- doxytag: member="PA::Fixed::operator^" ref="a4f2cd2d90f9f9b28eb54e136ae5ec6eb" args="(const Fixed &amp;a) const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a4f2cd2d90f9f9b28eb54e136ae5ec6eb">operator^</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a) const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary XOR operator, <a class="el" href="a00004.htm" title="Fixed-point wrapper class.">Fixed</a> version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5cb0ae57b47a10f9ccf959dc19b0c1ef"></a><!-- doxytag: member="PA::Fixed::operator&amp;=" ref="a5cb0ae57b47a10f9ccf959dc19b0c1ef" args="(u32 a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a5cb0ae57b47a10f9ccf959dc19b0c1ef">operator&amp;=</a> (u32 a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary AND assignment, u32 version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a38ecc6e5e158f60dca0eb145f80abd36"></a><!-- doxytag: member="PA::Fixed::operator|=" ref="a38ecc6e5e158f60dca0eb145f80abd36" args="(u32 a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a38ecc6e5e158f60dca0eb145f80abd36">operator|=</a> (u32 a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary OR assignment, u32 version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac4adc4d29bf1fb581df1e7893c1256d3"></a><!-- doxytag: member="PA::Fixed::operator^=" ref="ac4adc4d29bf1fb581df1e7893c1256d3" args="(u32 a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#ac4adc4d29bf1fb581df1e7893c1256d3">operator^=</a> (u32 a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary XOR assignment, u32 version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abf84b76fea8aca5943fd9b5df7616dad"></a><!-- doxytag: member="PA::Fixed::operator&amp;=" ref="abf84b76fea8aca5943fd9b5df7616dad" args="(const Fixed &amp;a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#abf84b76fea8aca5943fd9b5df7616dad">operator&amp;=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary AND assignment, <a class="el" href="a00004.htm" title="Fixed-point wrapper class.">Fixed</a> version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a47b78da87817fae0ff821b93c9db75b3"></a><!-- doxytag: member="PA::Fixed::operator|=" ref="a47b78da87817fae0ff821b93c9db75b3" args="(const Fixed &amp;a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a47b78da87817fae0ff821b93c9db75b3">operator|=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary OR assignment, <a class="el" href="a00004.htm" title="Fixed-point wrapper class.">Fixed</a> version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a61a225d3b407b721b3bcc630d5d18e3a"></a><!-- doxytag: member="PA::Fixed::operator^=" ref="a61a225d3b407b721b3bcc630d5d18e3a" args="(const Fixed &amp;a)" -->
<a class="el" href="a00004.htm">Fixed</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a61a225d3b407b721b3bcc630d5d18e3a">operator^=</a> (const <a class="el" href="a00004.htm">Fixed</a> &amp;a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Binary XOR assignment, <a class="el" href="a00004.htm" title="Fixed-point wrapper class.">Fixed</a> version. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a31260a0ca760e0a6162d70e490474256"></a><!-- doxytag: member="PA::Fixed::sqrt" ref="a31260a0ca760e0a6162d70e490474256" args="() const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a31260a0ca760e0a6162d70e490474256">sqrt</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the square root. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac282f7234d91b2395e089590949d9f89"></a><!-- doxytag: member="PA::Fixed::abs" ref="ac282f7234d91b2395e089590949d9f89" args="() const " -->
<a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#ac282f7234d91b2395e089590949d9f89">abs</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the absolute value. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4c4695fb9703b2b80b8bd209db50f37d"></a><!-- doxytag: member="PA::Fixed::raw" ref="a4c4695fb9703b2b80b8bd209db50f37d" args="() const " -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#a4c4695fb9703b2b80b8bd209db50f37d">raw</a> () const </td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the raw Q12 fixed point number. <br/></td></tr>
<tr><td colspan="2"><h2>Fonctions membres publiques statiques</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af38da75c7a80b9fe309f16cb55cf189e"></a><!-- doxytag: member="PA::Fixed::r2f" ref="af38da75c7a80b9fe309f16cb55cf189e" args="(int a)" -->
static <a class="el" href="a00004.htm">Fixed</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.htm#af38da75c7a80b9fe309f16cb55cf189e">r2f</a> (int a)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a <a class="el" href="a00004.htm" title="Fixed-point wrapper class.">Fixed</a> object using a raw Q12 fixed point number. <br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Description détaillée</h2>
<p>Fixed-point wrapper class. </p>
</div>
<hr size="1"/><address style="text-align: right;"><small>Généré le Wed Jul 7 21:08:39 2010 pour PAlib par&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>
