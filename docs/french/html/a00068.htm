<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>PAlib: Bitmap mode</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Généré par Doxygen 1.6.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.htm"><span>Page&nbsp;principale</span></a></li>
      <li><a href="pages.htm"><span>Pages&nbsp;associées</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="namespaces.htm"><span>Espaces&nbsp;de&nbsp;nommage</span></a></li>
      <li><a href="annotated.htm"><span>Structures&nbsp;de&nbsp;données</span></a></li>
      <li><a href="examples.htm"><span>Exemples</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Bitmap mode</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Macros</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga08db959e19ae99e0eca1322472774b21">PA_Get16bitPixel</a>(screen, x, y)&nbsp;&nbsp;&nbsp;PA_DrawBg[screen][(x) + ((y) &lt;&lt; 8)]</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Récupérer la couleur d'un pixel, en mode dessin 16 bit.  <a href="#ga08db959e19ae99e0eca1322472774b21"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga43f4fb595546c0cdbed84c855e7bbc10">PA_SetDrawSize</a>(screen, draw_size)&nbsp;&nbsp;&nbsp;PA_drawsize[screen] = draw_size;</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Regler la taille du stylo quand on dessine.  <a href="#ga43f4fb595546c0cdbed84c855e7bbc10"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gad213e7797691843d488a14cc908d8c9d">PA_Load8bitBitmap</a>(screen, bitmap)&nbsp;&nbsp;&nbsp;DMA_Copy(bitmap, (void*)PA_DrawBg[screen], 256*96, DMA_16NOW)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Charger une image à l'écran... pour une fond dessinable de 8 bits.  <a href="#gad213e7797691843d488a14cc908d8c9d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga75e5d7d09e8b16570b64147a3d15c682">PA_Load16bitBitmap</a>(screen, bitmap)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Charger une image à l'écran... pour une fond dessinable de 16 bits.  <a href="#ga75e5d7d09e8b16570b64147a3d15c682"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga8a7588f63b80c14a31d008498cea5175">PA_Clear8bitBg</a>(screen)&nbsp;&nbsp;&nbsp;dmaFillWords(0, (void*)PA_DrawBg[screen], 256*96*2);</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Efface l'écran... pour une fond dessinable de 8 bits.  <a href="#ga8a7588f63b80c14a31d008498cea5175"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga47a2f38b7773099498ad06ed85daa652">PA_Clear16bitBg</a>(screen)&nbsp;&nbsp;&nbsp;dmaFillWords(0, (void*)PA_DrawBg[screen], 256*192*2)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Efface l'écran... pour une fond dessinable de 16 bits.  <a href="#ga47a2f38b7773099498ad06ed85daa652"></a><br/></td></tr>
<tr><td colspan="2"><h2>Fonctions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga101bdc810b596c3577b63c365a7b61de">PA_Init8bitBg</a> (u8 screen, u8 bg_priority)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initialise le mode de dessin 8 bit (avec palette). Il suffit de choisir l'écran et la priorité de ce font (de 0 à 3). Ce fond sera placé sur le fond 3 (le remplacant), et doit etre chargé avant tout autre fond ! Prend environ 3/8 de la VRAM.  <a href="#ga101bdc810b596c3577b63c365a7b61de"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga92faadf94e29044314426f32c1577776">PA_InitBig8bitBg</a> (u8 screen, u8 bg_priority)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Similaire à PA_Init8bitBg, mais avec une taille de 256x256. Ceci prend un peu plus de mémoire, mais autorise le scrolling vertical.  <a href="#ga92faadf94e29044314426f32c1577776"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga2ebdea1d22ca5990b948b4be354b86d7">PA_Init16bitBg</a> (u8 screen, u8 bg_priority)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initialise le mode de dessin 16 bit (sans palettes, couleurs RGB). Il suffit de choisir l'écran et la priorité de ce font (de 0 à 3). Ce fond sera placé sur le fond 3 (le remplacant), et doit etre chargé avant tout autre fond ! Prend environ 3/8 de la VRAM.  <a href="#ga2ebdea1d22ca5990b948b4be354b86d7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gae020bc5f826c1172154f97c54db14086">PA_Put8bitPixel</a> (u8 screen, s16 x, s16 y, u8 color)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dessine un pixel à l'écran, sur un fond de 8 bits.  <a href="#gae020bc5f826c1172154f97c54db14086"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gaf4aca87a6e3613b7ecba1fa52272c5e5">PA_Put2_8bitPixels</a> (u8 screen, s16 x, s16 y, u16 colors)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dessine deux pixels à l'écran, sur un fond de 8 bits. Ces pixels sont contigus, et le premier doit avoir une position X pair. Beaucoup plus rapide que de dessiner les 2 pixels séparemment.  <a href="#gaf4aca87a6e3613b7ecba1fa52272c5e5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gad603693c1f9598df3fceca2275cbb1ff">PA_PutDouble8bitPixels</a> (u8 screen, s16 x, s16 y, u8 color1, u8 color2)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dessine deux pixels à l'écran, sur un fond de 8 bits. Ces pixels sont contigus, et le premier doit avoir une position X pair. Beaucoup plus rapide que de dessiner les 2 pixels séparemment.  <a href="#gad603693c1f9598df3fceca2275cbb1ff"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gadcde3ee74d4fda668acda6f4aba809f3">PA_Put4_8bitPixels</a> (u8 screen, s16 x, s16 y, u32 colors)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dessine 4 pixels à l'écran, sur un fond de 8 bits. Ces pixels sont contigus, et le premier doit avoir une position X pair. Façon la plus rapide de dessiner à l'écran.  <a href="#gadcde3ee74d4fda668acda6f4aba809f3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static u8&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gad472c090b1a53082a6530fe63118f6f4">PA_Get8bitPixel</a> (u8 screen, u8 x, u8 y)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Récupérer la couleur d'un pixel, en mode dessin 8 bit.  <a href="#gad472c090b1a53082a6530fe63118f6f4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gab9410f3c32833de0c49ab2ec78c0f9c1">PA_Put16bitPixel</a> (u8 screen, s16 x, s16 y, u16 color)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dessine un pixel à l'écran, sur un fond de 16 bits.  <a href="#gab9410f3c32833de0c49ab2ec78c0f9c1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga0ca49dc39f4d9a924efd213d55cb045d">PA_Draw8bitLine</a> (u8 screen, u16 x1, u16 y1, u16 x2, u16 y2, u8 color)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dessiner une ligne en mode dessin... pour le mode dessin 8 bit.  <a href="#ga0ca49dc39f4d9a924efd213d55cb045d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gaec9fceb64822780a458e3d68a1eec930">PA_Draw16bitLine</a> (u8 screen, u16 x1, u16 y1, u16 x2, u16 y2, u16 color)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dessiner une ligne en mode dessin... pour le mode dessin 16 bit.  <a href="#gaec9fceb64822780a458e3d68a1eec930"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gad618676e55e514647e2dd01c669b66e7">PA_Draw16bitLineEx</a> (u8 screen, s16 basex, s16 basey, s16 endx, s16 endy, u16 color, s8 size)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dessiner une ligne épaisse en mode dessin... pour le mode dessin 16 bit.  <a href="#gad618676e55e514647e2dd01c669b66e7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gae9f5ad03bb955853e3c44fe4aa260544">PA_Draw8bitLineEx</a> (u8 screen, s16 basex, s16 basey, s16 endx, s16 endy, u8 color, s8 size)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dessiner une ligne épaisse en mode dessin... pour le mode dessin 8 bit.  <a href="#gae9f5ad03bb955853e3c44fe4aa260544"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gaed5dfd5e26f3c9a09153f1fa9b63c8bb">PA_Draw16bitRect</a> (u8 screen, s16 basex, s16 basey, s16 endx, s16 endy, u16 color)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dessiner rectangle en mode dessin... pour le mode dessin 16 bit.  <a href="#gaed5dfd5e26f3c9a09153f1fa9b63c8bb"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gaa80029aa4a46b8fc7a484f7f51b7b2a4">PA_8bitDraw</a> (u8 screen, u8 color)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pour 8 bit : Jolie petite fonction qui dessine à l'écran ! Tout ce qu'il reste à faire, c'est de choisir la couleur. Si le VBL <a class="el" href="a00060.htm" title="PAlib C++ namespace.">PA</a> n'est pas initialiser, ne pas oublier de rafraichir le Stylet à chaque cycle (et non, pas avec des glacons !). Il suffit d'executer PA_Draw à chaque cycle pour dessiner...  <a href="#gaa80029aa4a46b8fc7a484f7f51b7b2a4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gaf74e162d9ae8c42ceba1becd9b993ba4">PA_16bitDraw</a> (u8 screen, u16 color)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pour 16 bit : Jolie petite fonction qui dessine à l'écran ! Tout ce qu'il reste à faire, c'est de choisir la couleur. Si le VBL <a class="el" href="a00060.htm" title="PAlib C++ namespace.">PA</a> n'est pas initialiser, ne pas oublier de rafraichir le Stylet à chaque cycle (et non, pas avec des glacons !). Il suffit d'executer PA_Draw à chaque cycle pour dessiner...  <a href="#gaf74e162d9ae8c42ceba1becd9b993ba4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga78ac3e81fe91c81b89b70256676b9380">PA_LoadJpeg</a> (u8 screen, void *jpeg)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Charger un jpeg sur un fond de 16 bits... Faut pas oublier de charger ce fond avant !  <a href="#ga78ac3e81fe91c81b89b70256676b9380"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gafd19885bd66bf748a64f89a1d64aae11">PA_LoadBmpToBuffer</a> (u16 *Buffer, s16 x, s16 y, void *bmp, s16 SWidth)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Charger un BMP dans un buffer de 16 bit.  <a href="#gafd19885bd66bf748a64f89a1d64aae11"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga1ad43b3be8e87d2be0264c8350fec812">PA_LoadBmpEx</a> (u8 screen, s16 x, s16 y, void *bmp)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Charger un BMP sur un fond de 16 bits... Faut pas oublier de charger ce fond avant !  <a href="#ga1ad43b3be8e87d2be0264c8350fec812"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gadfe226dedcc5f36c45af747cd83f9533">PA_LoadBmp</a> (u8 screen, void *bmp)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Charger un BMP sur un fond de 16 bits... Faut pas oublier de charger ce fond avant !  <a href="#gadfe226dedcc5f36c45af747cd83f9533"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static u16&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#ga82478fcd75d7390afd1bd3a4c2fd9acc">PA_GetBmpWidth</a> (void *bmpdata)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Récupérer la largeur d'un BMP en pixels.  <a href="#ga82478fcd75d7390afd1bd3a4c2fd9acc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static u16&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00068.htm#gadc33981d860e23befbcf0b515d2dad6a">PA_GetBmpHeight</a> (void *bmpdata)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Récupérer la hauteur d'un BMP en pixels.  <a href="#gadc33981d860e23befbcf0b515d2dad6a"></a><br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Description détaillée</h2>
<p>Draw on screen, either a pixel or a line, or anything ! Load a Bitmap, a Jpeg... </p>
<hr/><h2>Documentation des macros</h2>
<a class="anchor" id="ga08db959e19ae99e0eca1322472774b21"></a><!-- doxytag: member="PA_Draw.h::PA_Get16bitPixel" ref="ga08db959e19ae99e0eca1322472774b21" args="(screen, x, y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_Get16bitPixel</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">y&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;PA_DrawBg[screen][(x) + ((y) &lt;&lt; 8)]</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Récupérer la couleur d'un pixel, en mode dessin 16 bit. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Position X. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Position Y. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga43f4fb595546c0cdbed84c855e7bbc10"></a><!-- doxytag: member="PA_Draw.h::PA_SetDrawSize" ref="ga43f4fb595546c0cdbed84c855e7bbc10" args="(screen, draw_size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_SetDrawSize</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">draw_size&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;PA_drawsize[screen] = draw_size;</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Regler la taille du stylo quand on dessine. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>draw_size</em>&nbsp;</td><td>Taille... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad213e7797691843d488a14cc908d8c9d"></a><!-- doxytag: member="PA_Draw.h::PA_Load8bitBitmap" ref="gad213e7797691843d488a14cc908d8c9d" args="(screen, bitmap)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_Load8bitBitmap</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bitmap&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;DMA_Copy(bitmap, (void*)PA_DrawBg[screen], 256*96, DMA_16NOW)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Charger une image à l'écran... pour une fond dessinable de 8 bits. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bitmap</em>&nbsp;</td><td>Nom du bitmap </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga75e5d7d09e8b16570b64147a3d15c682"></a><!-- doxytag: member="PA_Draw.h::PA_Load16bitBitmap" ref="ga75e5d7d09e8b16570b64147a3d15c682" args="(screen, bitmap)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_Load16bitBitmap</td>
          <td>(</td>
          <td class="paramtype">screen, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bitmap&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Valeur :</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span>{u32 PA_temp; \
    <span class="keywordflow">for</span> (PA_temp = 0; PA_temp &lt; 256*192; PA_temp++)\
    PA_DrawBg[screen][PA_temp] = bitmap[PA_temp] | (1 &lt;&lt; 15);}<span class="keywordflow">while</span>(0)
</pre></div>
<p>Charger une image à l'écran... pour une fond dessinable de 16 bits. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bitmap</em>&nbsp;</td><td>Nom du bitmap </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga8a7588f63b80c14a31d008498cea5175"></a><!-- doxytag: member="PA_Draw.h::PA_Clear8bitBg" ref="ga8a7588f63b80c14a31d008498cea5175" args="(screen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_Clear8bitBg</td>
          <td>(</td>
          <td class="paramtype">screen&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;dmaFillWords(0, (void*)PA_DrawBg[screen], 256*96*2);</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Efface l'écran... pour une fond dessinable de 8 bits. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga47a2f38b7773099498ad06ed85daa652"></a><!-- doxytag: member="PA_Draw.h::PA_Clear16bitBg" ref="ga47a2f38b7773099498ad06ed85daa652" args="(screen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PA_Clear16bitBg</td>
          <td>(</td>
          <td class="paramtype">screen&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;dmaFillWords(0, (void*)PA_DrawBg[screen], 256*192*2)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Efface l'écran... pour une fond dessinable de 16 bits. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Documentation des fonctions</h2>
<a class="anchor" id="ga101bdc810b596c3577b63c365a7b61de"></a><!-- doxytag: member="PA_Draw.h::PA_Init8bitBg" ref="ga101bdc810b596c3577b63c365a7b61de" args="(u8 screen, u8 bg_priority)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_Init8bitBg </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>bg_priority</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initialise le mode de dessin 8 bit (avec palette). Il suffit de choisir l'écran et la priorité de ce font (de 0 à 3). Ce fond sera placé sur le fond 3 (le remplacant), et doit etre chargé avant tout autre fond ! Prend environ 3/8 de la VRAM. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_priority</em>&nbsp;</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga92faadf94e29044314426f32c1577776"></a><!-- doxytag: member="PA_Draw.h::PA_InitBig8bitBg" ref="ga92faadf94e29044314426f32c1577776" args="(u8 screen, u8 bg_priority)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_InitBig8bitBg </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>bg_priority</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Similaire à PA_Init8bitBg, mais avec une taille de 256x256. Ceci prend un peu plus de mémoire, mais autorise le scrolling vertical. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_priority</em>&nbsp;</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2ebdea1d22ca5990b948b4be354b86d7"></a><!-- doxytag: member="PA_Draw.h::PA_Init16bitBg" ref="ga2ebdea1d22ca5990b948b4be354b86d7" args="(u8 screen, u8 bg_priority)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_Init16bitBg </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>bg_priority</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initialise le mode de dessin 16 bit (sans palettes, couleurs RGB). Il suffit de choisir l'écran et la priorité de ce font (de 0 à 3). Ce fond sera placé sur le fond 3 (le remplacant), et doit etre chargé avant tout autre fond ! Prend environ 3/8 de la VRAM. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bg_priority</em>&nbsp;</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gae020bc5f826c1172154f97c54db14086"></a><!-- doxytag: member="PA_Draw.h::PA_Put8bitPixel" ref="gae020bc5f826c1172154f97c54db14086" args="(u8 screen, s16 x, s16 y, u8 color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_Put8bitPixel </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>color</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dessine un pixel à l'écran, sur un fond de 8 bits. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Position X (0-255) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Position Y (0-191) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color</em>&nbsp;</td><td>Couleur de la palette du fond (0-255) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf4aca87a6e3613b7ecba1fa52272c5e5"></a><!-- doxytag: member="PA_Draw.h::PA_Put2_8bitPixels" ref="gaf4aca87a6e3613b7ecba1fa52272c5e5" args="(u8 screen, s16 x, s16 y, u16 colors)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_Put2_8bitPixels </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>colors</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dessine deux pixels à l'écran, sur un fond de 8 bits. Ces pixels sont contigus, et le premier doit avoir une position X pair. Beaucoup plus rapide que de dessiner les 2 pixels séparemment. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Position X (0-254), doit etre PAIR </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Position Y (0-191) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>colors</em>&nbsp;</td><td>Couleurs des premier et deuxième pixels (*256 pour le deuxième) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad603693c1f9598df3fceca2275cbb1ff"></a><!-- doxytag: member="PA_Draw.h::PA_PutDouble8bitPixels" ref="gad603693c1f9598df3fceca2275cbb1ff" args="(u8 screen, s16 x, s16 y, u8 color1, u8 color2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_PutDouble8bitPixels </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>color1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>color2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dessine deux pixels à l'écran, sur un fond de 8 bits. Ces pixels sont contigus, et le premier doit avoir une position X pair. Beaucoup plus rapide que de dessiner les 2 pixels séparemment. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Position X (0-254), doit etre PAIR </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Position Y (0-191) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color1</em>&nbsp;</td><td>Couleur de la palette du fond (0-255) pour le premier pixel </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color2</em>&nbsp;</td><td>Couleur de la palette du fond (0-255) pour le deuxième pixel </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gadcde3ee74d4fda668acda6f4aba809f3"></a><!-- doxytag: member="PA_Draw.h::PA_Put4_8bitPixels" ref="gadcde3ee74d4fda668acda6f4aba809f3" args="(u8 screen, s16 x, s16 y, u32 colors)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_Put4_8bitPixels </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u32&nbsp;</td>
          <td class="paramname"> <em>colors</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dessine 4 pixels à l'écran, sur un fond de 8 bits. Ces pixels sont contigus, et le premier doit avoir une position X pair. Façon la plus rapide de dessiner à l'écran. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Position X (0-254), doit etre PAIR </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Position Y (0-191) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>colors</em>&nbsp;</td><td>Couleurs des 4 pixels </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad472c090b1a53082a6530fe63118f6f4"></a><!-- doxytag: member="PA_Draw.h::PA_Get8bitPixel" ref="gad472c090b1a53082a6530fe63118f6f4" args="(u8 screen, u8 x, u8 y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline u8 PA_Get8bitPixel </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Récupérer la couleur d'un pixel, en mode dessin 8 bit. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Position X. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Position Y. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gab9410f3c32833de0c49ab2ec78c0f9c1"></a><!-- doxytag: member="PA_Draw.h::PA_Put16bitPixel" ref="gab9410f3c32833de0c49ab2ec78c0f9c1" args="(u8 screen, s16 x, s16 y, u16 color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_Put16bitPixel </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>color</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dessine un pixel à l'écran, sur un fond de 16 bits. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Position X (0-255) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Position Y (0-191) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color</em>&nbsp;</td><td>Couleur de 16 bits, obtenue avec <a class="el" href="a00079.htm#gaac31ab2510a20c165e8b3b265ae7a780" title="Convertir une couleurs au format Rouge, Vert, Bleu en un nombre utilisable par le...">PA_RGB(rouge, vert, bleu)</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga0ca49dc39f4d9a924efd213d55cb045d"></a><!-- doxytag: member="PA_Draw.h::PA_Draw8bitLine" ref="ga0ca49dc39f4d9a924efd213d55cb045d" args="(u8 screen, u16 x1, u16 y1, u16 x2, u16 y2, u8 color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_Draw8bitLine </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>color</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dessiner une ligne en mode dessin... pour le mode dessin 8 bit. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x1</em>&nbsp;</td><td>Position X du premier point. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y1</em>&nbsp;</td><td>Position Y du premier point. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x2</em>&nbsp;</td><td>Position X du deuxième point. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y2</em>&nbsp;</td><td>Position Y du deuxième point. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color</em>&nbsp;</td><td>Couleur de la palette du fond (0-255) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaec9fceb64822780a458e3d68a1eec930"></a><!-- doxytag: member="PA_Draw.h::PA_Draw16bitLine" ref="gaec9fceb64822780a458e3d68a1eec930" args="(u8 screen, u16 x1, u16 y1, u16 x2, u16 y2, u16 color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_Draw16bitLine </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>color</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dessiner une ligne en mode dessin... pour le mode dessin 16 bit. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x1</em>&nbsp;</td><td>Position X du premier point. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y1</em>&nbsp;</td><td>Position Y du premier point. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x2</em>&nbsp;</td><td>Position X du deuxième point. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y2</em>&nbsp;</td><td>Position Y du deuxième point. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color</em>&nbsp;</td><td>Couleur de 15 bits.On peut utiliser la macro PA_RGB pour entrer les valeurs RGB... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad618676e55e514647e2dd01c669b66e7"></a><!-- doxytag: member="PA_Draw.h::PA_Draw16bitLineEx" ref="gad618676e55e514647e2dd01c669b66e7" args="(u8 screen, s16 basex, s16 basey, s16 endx, s16 endy, u16 color, s8 size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_Draw16bitLineEx </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>basex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>basey</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>endx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>endy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s8&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dessiner une ligne épaisse en mode dessin... pour le mode dessin 16 bit. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>basex</em>&nbsp;</td><td>Position X du premier point. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>basey</em>&nbsp;</td><td>Position Y du premier point. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>endx</em>&nbsp;</td><td>Position X du deuxième point. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>endy</em>&nbsp;</td><td>Position Y du deuxième point. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color</em>&nbsp;</td><td>Couleur de 15 bits.On peut utiliser la macro PA_RGB pour entrer les valeurs RGB... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>Largeur du trait, en pixels </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gae9f5ad03bb955853e3c44fe4aa260544"></a><!-- doxytag: member="PA_Draw.h::PA_Draw8bitLineEx" ref="gae9f5ad03bb955853e3c44fe4aa260544" args="(u8 screen, s16 basex, s16 basey, s16 endx, s16 endy, u8 color, s8 size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_Draw8bitLineEx </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>basex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>basey</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>endx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>endy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s8&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dessiner une ligne épaisse en mode dessin... pour le mode dessin 8 bit. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>basex</em>&nbsp;</td><td>Position X du premier point. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>basey</em>&nbsp;</td><td>Position Y du premier point. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>endx</em>&nbsp;</td><td>Position X du deuxième point. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>endy</em>&nbsp;</td><td>Position Y du deuxième point. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color</em>&nbsp;</td><td>Couleur de 15 bits.On peut utiliser la macro PA_RGB pour entrer les valeurs RGB... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size</em>&nbsp;</td><td>Largeur du trait, en pixels </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaed5dfd5e26f3c9a09153f1fa9b63c8bb"></a><!-- doxytag: member="PA_Draw.h::PA_Draw16bitRect" ref="gaed5dfd5e26f3c9a09153f1fa9b63c8bb" args="(u8 screen, s16 basex, s16 basey, s16 endx, s16 endy, u16 color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_Draw16bitRect </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>basex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>basey</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>endx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>endy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>color</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Dessiner rectangle en mode dessin... pour le mode dessin 16 bit. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>basex</em>&nbsp;</td><td>Position X du premier point. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>basey</em>&nbsp;</td><td>Position Y du premier point. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>endx</em>&nbsp;</td><td>Position X du deuxième point. Attention, si X n'est pas compris entre 0 et 255, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>endy</em>&nbsp;</td><td>Position Y du deuxième point. Attention, si Y n'est pas compris entre 0 et 191, le résultat ne sera pas celui escompté </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color</em>&nbsp;</td><td>Couleur de 15 bits.On peut utiliser la macro PA_RGB pour entrer les valeurs RGB... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa80029aa4a46b8fc7a484f7f51b7b2a4"></a><!-- doxytag: member="PA_Draw.h::PA_8bitDraw" ref="gaa80029aa4a46b8fc7a484f7f51b7b2a4" args="(u8 screen, u8 color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">PA_8bitDraw </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>color</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Pour 8 bit : Jolie petite fonction qui dessine à l'écran ! Tout ce qu'il reste à faire, c'est de choisir la couleur. Si le VBL <a class="el" href="a00060.htm" title="PAlib C++ namespace.">PA</a> n'est pas initialiser, ne pas oublier de rafraichir le Stylet à chaque cycle (et non, pas avec des glacons !). Il suffit d'executer PA_Draw à chaque cycle pour dessiner... </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color</em>&nbsp;</td><td>Numéro de la couleur dans la palette (0-255) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf74e162d9ae8c42ceba1becd9b993ba4"></a><!-- doxytag: member="PA_Draw.h::PA_16bitDraw" ref="gaf74e162d9ae8c42ceba1becd9b993ba4" args="(u8 screen, u16 color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">PA_16bitDraw </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u16&nbsp;</td>
          <td class="paramname"> <em>color</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Pour 16 bit : Jolie petite fonction qui dessine à l'écran ! Tout ce qu'il reste à faire, c'est de choisir la couleur. Si le VBL <a class="el" href="a00060.htm" title="PAlib C++ namespace.">PA</a> n'est pas initialiser, ne pas oublier de rafraichir le Stylet à chaque cycle (et non, pas avec des glacons !). Il suffit d'executer PA_Draw à chaque cycle pour dessiner... </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>color</em>&nbsp;</td><td>Couleur de 15 bits.On peut utiliser la macro PA_RGB pour entrer les valeurs RGB... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga78ac3e81fe91c81b89b70256676b9380"></a><!-- doxytag: member="PA_Draw.h::PA_LoadJpeg" ref="ga78ac3e81fe91c81b89b70256676b9380" args="(u8 screen, void *jpeg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_LoadJpeg </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>jpeg</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Charger un jpeg sur un fond de 16 bits... Faut pas oublier de charger ce fond avant ! </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>jpeg</em>&nbsp;</td><td>image au format jpeg... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gafd19885bd66bf748a64f89a1d64aae11"></a><!-- doxytag: member="PA_Draw.h::PA_LoadBmpToBuffer" ref="gafd19885bd66bf748a64f89a1d64aae11" args="(u16 *Buffer, s16 x, s16 y, void *bmp, s16 SWidth)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PA_LoadBmpToBuffer </td>
          <td>(</td>
          <td class="paramtype">u16 *&nbsp;</td>
          <td class="paramname"> <em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>bmp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>SWidth</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Charger un BMP dans un buffer de 16 bit. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Buffer</em>&nbsp;</td><td>Buffer... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Position X du coin supérieur gauche </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Position Y du coin supérieur gauche </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bmp</em>&nbsp;</td><td>image au format BMP... </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>SWidth</em>&nbsp;</td><td>Largeur du buffer, en pixels (256 pour la taille de l'écran...) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga1ad43b3be8e87d2be0264c8350fec812"></a><!-- doxytag: member="PA_Draw.h::PA_LoadBmpEx" ref="ga1ad43b3be8e87d2be0264c8350fec812" args="(u8 screen, s16 x, s16 y, void *bmp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_LoadBmpEx </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&nbsp;</td>
          <td class="paramname"> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>bmp</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Charger un BMP sur un fond de 16 bits... Faut pas oublier de charger ce fond avant ! </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>x</em>&nbsp;</td><td>Position X du coin supérieur gauche </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>y</em>&nbsp;</td><td>Position Y du coin supérieur gauche </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bmp</em>&nbsp;</td><td>image au format BMP... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gadfe226dedcc5f36c45af747cd83f9533"></a><!-- doxytag: member="PA_Draw.h::PA_LoadBmp" ref="gadfe226dedcc5f36c45af747cd83f9533" args="(u8 screen, void *bmp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline void PA_LoadBmp </td>
          <td>(</td>
          <td class="paramtype">u8&nbsp;</td>
          <td class="paramname"> <em>screen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>bmp</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Charger un BMP sur un fond de 16 bits... Faut pas oublier de charger ce fond avant ! </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>screen</em>&nbsp;</td><td>Choix de l'écran (0 ou 1) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>bmp</em>&nbsp;</td><td>image au format BMP... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga82478fcd75d7390afd1bd3a4c2fd9acc"></a><!-- doxytag: member="PA_Draw.h::PA_GetBmpWidth" ref="ga82478fcd75d7390afd1bd3a4c2fd9acc" args="(void *bmpdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline u16 PA_GetBmpWidth </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>bmp</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Récupérer la largeur d'un BMP en pixels. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>bmp</em>&nbsp;</td><td>image au format BMP... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gadc33981d860e23befbcf0b515d2dad6a"></a><!-- doxytag: member="PA_Draw.h::PA_GetBmpHeight" ref="gadc33981d860e23befbcf0b515d2dad6a" args="(void *bmpdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline u16 PA_GetBmpHeight </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"> <em>bmp</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Récupérer la hauteur d'un BMP en pixels. </p>
<dl><dt><b>Paramètres:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>bmp</em>&nbsp;</td><td>image au format BMP... </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div>
<hr size="1"/><address style="text-align: right;"><small>Généré le Wed Jul 7 21:08:38 2010 pour PAlib par&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.6.1 </small></address>
</body>
</html>
